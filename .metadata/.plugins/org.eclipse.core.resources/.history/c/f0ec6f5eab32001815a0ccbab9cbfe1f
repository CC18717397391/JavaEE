package com.yizhan.artical;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.yizhan.util.DateUtil;
import com.yizhan.util.DbTool;

@Controller		
@RequestMapping("/artical")
public class ArticalController {
	
	@Autowired
	ArticalDao ArticalDao;
	
	/**
	 * 查询文章列表
	 */
	@RequestMapping(value="/articals", method=RequestMethod.GET)
	public @ResponseBody Map<String, Object> getArticalList(
			@RequestParam(value= "page", required = true) String pageStr,
			@RequestParam(value= "limit", required = true) String limitStr) {
		HashMap<String, Object> map = new HashMap<String, Object>();
		try {
			int page = Integer.parseInt(pageStr);
			int limit = Integer.parseInt(limitStr);
			List<Artical> all = ArticalDao.queryAllArtical();
			int total = (int) Math.ceil(all.size()/(double)limit);
			List<Artical> sub = all.subList((page-1)*limit, page*limit);
			map.put("state", "SUCCESS");
			map.put("list", sub);
			map.put("total", String.valueOf(total));
		} catch (Exception e) {
			map.put("state", "FAILED");
			map.put("errorMessage", "请求出错！");
		}
		return map;
	}
	
	/**
	 * 添加文章
	 */
	@RequestMapping(value="/articals", method=RequestMethod.POST)
	public @ResponseBody Map<String, Object> addArtical(@RequestBody Artical artical) {
		HashMap<String, Object> map = new HashMap<String, Object>();
		artical.setCreate_time(DateUtil.getNowDateTime());
		try {
			DbTool.saveOrUpdateObject(Artical.class, "artical", artical);
			map.put("state", "SUCCESS");
		} catch (Exception e) {
			e.printStackTrace();
			map.put("state", "FAILED");
			map.put("errorMessage", "添加失败");
		}
		return map;
	}
	
	/**
	 * 修改文章
	 */
	@RequestMapping(value="/articals/{artical_id}", method=RequestMethod.PUT)
	public @ResponseBody Map<String, Object> modifyArtical(
			@PathVariable("courseId") Integer artical_id) {
		HashMap<String, Object> map = new HashMap<String, Object>();
		artical.setCreate_time(DateUtil.getNowDateTime());
		try {
			DbTool.saveOrUpdateObject(Artical.class, "artical", artical);
			map.put("state", "SUCCESS");
		} catch (Exception e) {
			e.printStackTrace();
			map.put("state", "FAILED");
			map.put("errorMessage", "添加失败");
		}
		return map;
	}
	
	

}
