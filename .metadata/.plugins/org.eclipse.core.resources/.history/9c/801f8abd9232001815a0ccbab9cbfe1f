package com.yizhan.login;

import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.yizhan.bean.User;


@Controller		
@RequestMapping("/permission")
public class PermissionController {
	
	User user;
	
	@Autowired
	PermissionDao pd;

	@RequestMapping(value="/login", method=RequestMethod.POST)
	public @ResponseBody Map<String, String> Validate(
			@RequestParam(value= "username", required = true) String username,
			@RequestParam(value= "password", required = true) String password,
			HttpSession session) {
		HashMap<String, String> map = new HashMap<String, String>();
		if(username.equals("admin") && password.equals("admin123")){
			user = new User();
			user.setUsername(username);
			user.setPassword(password);
			map.put("state", "REDIRECT");
			map.put("redirect_url", "/iyizhan/manager.html");
			session.setAttribute("user", user);
		}else{
			map.put("state", "FAILED");
			map.put("errorMessage", "用户名或密码输入有误！");
		}
		return map;
	}
	
	@RequestMapping(value="/login", method=RequestMethod.PUT)
	public @ResponseBody Map<String, String> reset(
			@RequestParam(value= "oldPwd", required = true) String oldPwd,
			@RequestParam(value= "newPwd", required = true) String newPwd,
			@RequestParam(value= "confirmPwd", required = true) String confirmPwd,
			HttpSession session) {
		HashMap<String, String> map = new HashMap<String, String>();
		User user = (User) session.getAttribute("user");
		if(oldPwd.equals(user.getPassword())){
			if(newPwd.equals(confirmPwd)){
				//保存密码入库  
				//清空session  返回登录页
				session.invalidate();
				map.put("state", "REDIRECT");
				map.put("redirect_url", "/iyizhan/login.html");
			}else{
				map.put("state", "FAILED ");
				map.put("errorMessage", "两次密码不一致");
			}
		}else{
			map.put("state", "FAILED ");
			map.put("errorMessage", "旧密码输入有误");
		}
		return map;
	}
	
	@RequestMapping(value="/permission", method=RequestMethod.POST)
	public @ResponseBody Map<String, String> Permission(HttpSession session) throws IOException {
		HashMap<String, String> map = new HashMap<String, String>();
		User user = (User) session.getAttribute("user");
		if(user==null){
			map.put("state", "REDIRECT");
			map.put("redirect_url", "/iyizhan/login.html");
		}
		return map;
	}
	
	@RequestMapping(value="/logout", method=RequestMethod.POST)
	public @ResponseBody Map<String, String> logout(HttpSession session,HttpServletResponse resp) throws IOException {
		HashMap<String, String> map = new HashMap<String, String>();
		session.invalidate();
		map.put("state", "REDIRECT");
		map.put("redirect_url", "/iyizhan/login.html");
		return map;
	}
	
	

}
